# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

'atom-text-editor.vim-mode.visual-mode':
  'v': 'expand-region:expand'
  'ctrl-v': 'expand-region:shrink'

'atom-text-editor.vim-mode:not(.insert-mode)':
  # cursor
  'ctrl-h': 'window:focus-pane-on-left'
  'ctrl-j': 'window:focus-pane-below'
  'ctrl-k': 'window:focus-pane-above'
  'ctrl-l': 'window:focus-pane-on-right'
  'shift-h': 'editor:move-to-first-character-of-line'
  'shift-l': 'editor:move-to-end-of-line'
  'enter': 'core:move-down'

  # 's g': 'project-find:show'
  's r': 'fuzzy-finder:toggle-file-finder'
  's g': 'fuzzy-grep:toggle'
  's shift-g': 'find-and-replace:show-replace'

  'space n': 'application:new-file'
  'space shift-n': 'application:new-window'
  'space w': 'pane:close'

  # comment
  'ctrl-/': 'editor:toggle-line-comments'
  # 'ctrl-/': 'emmet:toggle-comment'

  # 'ctrl-o': 'symbols-view:return-from-declaration'

  # git-plus
  'space g a': 'git-plus:add'
  'space g s': 'git-plus:status'
  'space g g': 'git-plus:menu'
  'space g c': 'git-plus:commit'

  # term2
  'space t': 'term2:open'
  'space l': 'term2:open'

  # user
  'space space': 'user:toggle-todo-checkbox'

'atom-workspace':
  # cursor-history
  'ctrl-i':     'cursor-history:next'
  'ctrl-o':     'cursor-history:prev'
  'ctrl-cmd-i': 'cursor-history:next-within-editor'
  'ctrl-cmd-o': 'cursor-history:prev-within-editor'
